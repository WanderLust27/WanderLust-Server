
services:
  app:
    image: wanderlust-dev
    build:
      context: .
    container_name: wanderlust-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8090/realms/wanderlust-realm
      - SPRING_PROFILES_ACTIVE=${ACTIVE_PROFILE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_AUTH_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_AUTH_PASSWORD}
      - JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -Xms256m
    networks:
      - app-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 5s
#      retries: 3

  db:
    image: postgres:15-alpine
    container_name: wanderlust-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_AUTH_USERNAME}
      - POSTGRES_PASSWORD=${DB_AUTH_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_MULTIPLE_DATABASES=${KEYCLOAK_DB}
      - POSTGRES_MULTIPLE_USERS=${KEYCLOAK_DB_USER}:${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256f
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./postgresql/init-keycloak-db.sh:/docker-entrypoint-initdb.d/init-keycloak-db.sh
      - ./postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_AUTH_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: wanderlust-keycloak
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_HOSTNAME: keycloak
      KC_HTTP_PORT: 8090
      KC_HOSTNAME_PORT: 8090
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KEYCLOAK_ENABLE_HEAL  TH_ENDPOINTS: 'true'
      KEYCLOAK_DATABASE_SCHEMA: public
      KC_HTTP_RELATIVE_PATH: /
      KC_LOG: console
      KC_HTTP_ENABLED: "true"
    ports:
      - "8090:8090"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    command: ["start-dev", "--verbose", "--import-realm"]
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import

volumes:
  pg-data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16  # Isolated network